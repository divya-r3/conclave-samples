plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm'
}

mainClassName = "com.r3.conclave.sample.host.Host"

// Override the default (simulation) with -PenclaveMode=
def mode = findProperty("enclaveMode")?.toString()?.toLowerCase() ?: "simulation"

// Create a task that can be used for generating signing materials
tasks.register("prepareForSigning") {
    it.dependsOn(":enclave:generateEnclaveSigningMaterial${mode.capitalize()}")
}

dependencies {
    implementation "com.r3.conclave:conclave-host:$conclaveVersion"

    // We need the enclave at runtime but not when compiling the host, because they don't share types.
    runtimeOnly project(path: ":enclave", configuration: mode)
    runtimeOnly "org.slf4j:slf4j-simple:1.7.30"

    testImplementation "org.junit.jupiter:junit-jupiter:5.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

test {
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}
repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
