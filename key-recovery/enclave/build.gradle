plugins {
    id 'com.r3.conclave.enclave'
//    id 'org.jetbrains.kotlin.jvm'
//    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.30'
}

dependencies {
    implementation "com.r3.conclave:conclave-enclave"
    implementation "com.r3.conclave:conclave-client:$conclaveVersion" // TODO constraints only
    testImplementation "com.r3.conclave:conclave-testing"
    testImplementation "org.junit.jupiter:junit-jupiter:5.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    api 'org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.1'
    api 'org.jetbrains.kotlinx:kotlinx-serialization-protobuf:1.0.1' // TODO move serialisation to common
}

conclave {
    productID = 1
    revocationLevel = 0

    simulation {
        signingType = privateKey
        signingKey = file("../signing/sample_private_key.pem")
    }

    debug {
        signingType = privateKey
        signingKey = file("../signing/sample_private_key.pem")
    }

    release {
        // The enclave needs to be built in stages.
        // Firstly, build the signing material:
        //  ./gradlew prepareForSigning -PenclaveMode="Release"
        //
        // Generate a signature from the signing material. The password for the sample external key is '12345'
        //  openssl dgst -sha256 -out signing/signature.bin -sign signing/external_signing_private.pem -keyform PEM enclave/build/enclave/Release/signing_material.bin
        //
        // Finally build the signed enclave:
        //  ./gradlew build -PenclaveMode="Release"
        //
        signingType = externalKey
        signatureDate = new Date(1970, 0, 1)
        mrsignerSignature = file("../signing/signature.bin")
        mrsignerPublicKey = file("../signing/external_signing_public.pem")
    }
}
repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
